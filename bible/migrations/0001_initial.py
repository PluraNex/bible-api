# Generated by Django 4.2.7 on 2025-09-07 01:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="APIKey",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Descriptive name for this API key", max_length=100)),
                ("key", models.CharField(help_text="The actual API key", max_length=64, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                ("rate_limit", models.IntegerField(default=1000, help_text="Requests per hour")),
                (
                    "scopes",
                    models.JSONField(
                        default=list, help_text="List of allowed scopes: ['read', 'write', 'ai', 'audio']"
                    ),
                ),
            ],
            options={
                "db_table": "api_keys",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50, unique=True)),
                ("abbreviation", models.CharField(max_length=10, unique=True)),
                ("order", models.PositiveIntegerField(unique=True)),
                (
                    "testament",
                    models.CharField(choices=[("OLD", "Old Testament"), ("NEW", "New Testament")], max_length=3),
                ),
                ("chapter_count", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "books",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Version",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100)),
                ("abbreviation", models.CharField(max_length=10, unique=True)),
                ("language", models.CharField(default="en", max_length=10)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "versions",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["language", "is_active"], name="versions_languag_38ea4c_idx"),
                    models.Index(fields=["abbreviation"], name="versions_abbrevi_4411a0_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Verse",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("chapter", models.PositiveIntegerField()),
                ("number", models.PositiveIntegerField()),
                ("text", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="verses", to="bible.book"
                    ),
                ),
                (
                    "version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="verses", to="bible.version"
                    ),
                ),
            ],
            options={
                "db_table": "verses",
                "ordering": ["book__order", "chapter", "number"],
            },
        ),
        migrations.AddIndex(
            model_name="book",
            index=models.Index(fields=["testament", "order"], name="books_testame_3104fb_idx"),
        ),
        migrations.AddIndex(
            model_name="book",
            index=models.Index(fields=["abbreviation"], name="books_abbrevi_3f4ec2_idx"),
        ),
        migrations.AddField(
            model_name="apikey",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="api_keys", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddIndex(
            model_name="verse",
            index=models.Index(fields=["book", "chapter", "number"], name="verses_book_id_8780b0_idx"),
        ),
        migrations.AddIndex(
            model_name="verse",
            index=models.Index(fields=["version", "book"], name="verses_version_f282c4_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="verse",
            unique_together={("book", "version", "chapter", "number")},
        ),
        migrations.AddIndex(
            model_name="apikey",
            index=models.Index(fields=["key"], name="api_keys_key_291dcc_idx"),
        ),
        migrations.AddIndex(
            model_name="apikey",
            index=models.Index(fields=["user", "is_active"], name="api_keys_user_id_6e7352_idx"),
        ),
    ]
