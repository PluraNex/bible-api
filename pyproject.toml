[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bible-api"
version = "0.1.0"
description = "RESTful Bible API with AI integration"
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Bible API Team", email = "team@bible-api.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Framework :: Django :: 4.2",
    "Topic :: Religion",
]
dependencies = [
    "Django>=4.2,<5.0",
    "djangorestframework>=3.14.0",
    "drf-spectacular>=0.26.0",
    "psycopg2-binary>=2.9.0",
    "redis>=4.5.0",
    "django-redis>=5.2.0",
    "django-cors-headers>=4.0.0",
    "python-decouple>=3.8",
    "Pillow>=9.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.0.270",
    "black>=23.0.0",
    "pre-commit>=3.3.0",
    "factory-boy>=3.2.0",
    "django-debug-toolbar>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/bible-api/bible-api"
Repository = "https://github.com/bible-api/bible-api.git"
Documentation = "https://bible-api.github.io/docs/"
"Bug Tracker" = "https://github.com/bible-api/bible-api/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["bible*", "config*", "common*"]
exclude = ["tests*"]

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "DJ", # flake8-django
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"*/migrations/*" = ["E501", "DJ01", "I001"]
"*/settings/*" = ["F403", "F405"]

[tool.ruff.lint.isort]
known-first-party = ["bible", "config", "common"]
known-third-party = ["django"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--reuse-db",
    "--nomigrations",
    "--cov=bible",
    "--cov=config",
    "--cov=common",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=77",
]
testpaths = ["tests"]

[tool.coverage.run]
source = ["bible", "config", "common"]
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "*/settings/*",
    "*/tests/*",
    "*/__pycache__/*",
    # Data directory (datasets, management commands, docs)
    "data/*",
    "*/data/*",
    # Django structural files
    "*/apps.py",
    "*/asgi.py",
    "*/wsgi.py",
    # Import aggregator files
    "bible/serializers.py",
    # URL configuration files
    "**/urls.py",
    # Files under construction
    "common/data_core.py",
]

[tool.coverage.report]
fail_under = 77
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
